// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: userqueries.sql

package db

import (
	"context"
)

const getUser = `-- name: GetUser :one
SELECT id, first_name, last_name, username, hashed_password FROM users
WHERE username = $1 LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, username string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, username)
	var i User
	err := row.Scan(
		&i.ID,
		&i.FirstName,
		&i.LastName,
		&i.Username,
		&i.HashedPassword,
	)
	return i, err
}

const saveUser = `-- name: SaveUser :exec
INSERT INTO users (first_name, last_name, username, hashed_password)
VALUES ($1, $2, $3, $4)
`

type SaveUserParams struct {
	FirstName      string
	LastName       string
	Username       string
	HashedPassword string
}

func (q *Queries) SaveUser(ctx context.Context, arg SaveUserParams) error {
	_, err := q.db.ExecContext(ctx, saveUser,
		arg.FirstName,
		arg.LastName,
		arg.Username,
		arg.HashedPassword,
	)
	return err
}
